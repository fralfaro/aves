try:
    import rapidjson as json
except ImportError:
    import json

import pandas as pd


def load_json_values(x):
    try:
        return json.loads(x) if x is not None else {}
    except Exception:
        print("err", x)
        return {}


def explode_tags(df):
    return df.join(pd.DataFrame.from_records(df["tags"].map(load_json_values)))


osm_to_tax = {
    "aerialway": {
        "*": ["transport", "transport:air", "transport:air:aerodrome"],
    },
    "aeroway": {
        #'*':                        ['transport','transport:air'],
        "aerodrome": ["transport", "transport:air", "transport:air:aerodrome"],
        "international": ["transport", "transport:air", "transport:air:airport"],
    },
    "amenity": {
        "bbq": ["food"],
        "dojo": ["recreation"],
        "gym": ["recreation"],
        "place_of_worship": ["religion"],
        "arts_centre": ["entertainment"],
        "community_centre": ["entertainment"],
        "social_centre": ["entertainment"],
        "library": ["education", "entertainment"],
        "planetarium": ["education", "entertainment"],
        "theatre": ["entertainment"],
        "college": ["education"],
        "kindergarten": ["education"],
        "school": ["education"],
        "university": ["education"],
        "bar": ["nightlife"],
        "biergarten": ["nightlife"],
        "cinema": ["entertainment"],
        "casino": ["nightlife"],
        "gambling": ["nightlife"],
        "nightclub": ["nightlife"],
        "pub": ["nightlife"],
        "courthouse": ["government"],
        "embassy": ["government"],
        "fire_station": ["government"],
        "police": ["government"],
        "post_office": ["professional"],
        "ranger_station": ["government"],
        "register_office": ["government"],
        "townhall": ["government"],
        "coworking_space": ["professional"],
        "atm": ["money"],
        "bank": ["finance"],
        "bureau_de_change": ["money"],
        "clinic": ["health"],
        "dentist": ["health"],
        "doctors": ["health"],
        "hospital": ["health"],
        "nursing_home": ["health"],
        # TODO: is pharmacy convenience? or is it health? professional?
        # being mostly a shop, I would say convenience
        "pharmacy": ["convenience"],
        "social_facility": ["professional"],
        "veterinary": ["professional"],
        "cafe": ["food"],
        "fast_food": ["food"],
        "food_court": ["food", "retail"],
        "ice_cream": ["food"],
        "marketplace": ["food", "retail"],
        "restaurant": ["food"],
        "bus_station": ["transport", "transport:public", "transport:bus"],
        "taxi": ["transport", "transport:taxi"],
        "car_rental": ["transport", "transport:car", "professional"],
        "car_wash": ["transport", "transport:car", "professional"],
        "charging_station": ["transport", "transport:car", "professional"],
        "fuel": ["transport", "transport:car", "professional"],
        "parking": ["transport", "transport:car"],
        "bicycle_parking": ["transport", "transport:bike"],
        # added by Edu
        "bicycle_rental": ["transport", "transport:bike"],
        "bicycle_repair_station": ["transport", "professional"],
        "recycling": ["sustainability"],
        "swimming_pool": ["recreation"],
        "public_building": ["government"],
        "conference centre": ["professional"],
        "brothel": ["nightlife"],
        "bench": ["public_facility"],
        "mall": ["retail"],
        "parking_entrance": ["transport", "transport:car"],
        "prison": ["government"],
        "childcare": ["professional"],
        "ferry_terminal": ["transport", "transport:sea"],
        "waste_basket": ["public_facility"],
        "post_box": ["public_facility"],
        "fountain": ["public_facility"],
        "water_point": ["public_facility"],
        "showers": ["public_facility"],
        "toilets": ["public_facility"],
        "waste_disposal": ["public_facility"],
        "motorcycle_parking": ["transport", "transport:moto"],
        "drinking_water": ["public_facility"],
        "shelter": ["public_facility"],
        "events_centre": ["professional"],
        "events_venue": ["professional"],
        "apart_hotel": ["accommodation"],
        "exhibition_centre": ["professional"],
        "language_school": ["education"],
        "company": ["professional"],
        "money_transfer": ["money"],
        "vehicle_inspection": ["transport", "transport:car"],
        "driving_school": ["education"],
        "market": ["retail"],
        "department_store": ["retail"],
        "conference_center": ["professional"],
        "conference_centre": ["professional"],
        "dormitory": ["accommodation"],
        "sports": ["entertainment"],
        "studio": ["professional"],
        "stripclub": ["nightlife"],
        "music_school": ["education"],
        "trade_school": ["education"],
        "pastries": ["food"],
        "music_venue": ["entertainment"],
        "aparthotel": ["accommodation"],
        "apartments": ["accommodation"],
        "union": ["professional"],
        "hairdresser": ["professional"],
        "tobacco": ["convenience"],
        "candies": ["convenience"],
        "dog_wash": ["professional"],
        "music_rehearsal_place": ["entertainment", "professional"],
        "love_hotel": ["accommodation"],
        "internet_cafe": ["food", "convenience"],
        "training": ["education"],
        "monastery": ["religion"],
        "dancing_school": ["education", "entertainment"],
        "tutoring": ["professional"],
        "prep_school": ["education"],
        "car_sharing": ["transport", "transport:car"],
        "payment_centre": ["money"]
    },
    "building": {
        "hotel": ["accommodation"],
        "commercial": ["professional"],
        "retail": ["retail"],
        "chapel": ["religion"],
        "church": ["religion"],
        "mosque": ["religion"],
        "temple": ["religion"],
        "synagogue": ["religion"],
        "shrine": ["religion"],
        "civic": ["government"],
        "hospital": ["health"],
        "school": ["education"],
        "stadium": ["entertainment"],
        "university": ["education"],
        "public": ["government"],
        "farm": ["industry", "industry:agriculture"],
        "train_station": ["transport", "transport:station"],
        "transportation": ["transport", "transport:station"],
        "recycling": ["sustainability"],
        "library": ["education", "entertainment"],
        "office": ["professional"],
        "college": ["education"],
    },
    # experimental, import cuisines for food-related venues
    "cuisine": {
        "*": ["food"],
        # menu focus
        "bagel": ["food", "food:bagel"],
        "barbecue": ["food", "food:barbecue"],
        "bougatsa": ["food", "food:bougatsa"],
        "burger": ["food", "food:burger"],
        "burrito": ["food", "food:burrito"],
        "cake": ["food", "food:cake"],
        "casserole": ["food", "food:casserole"],
        "chicken": ["food", "food:chicken"],
        "coffee_shop": ["food", "food:coffee_shop"],
        "crepe": ["food", "food:crepe"],
        "couscous": ["food", "food:couscous"],
        "curry": ["food", "food:curry"],
        "dessert": ["food", "food:dessert"],
        "donut": ["food", "food:donut"],
        "doughnut": ["food", "food:donut"],
        "empanada": ["food", "food:empanada"],
        "fish": ["food", "food:fish"],
        "fish_and_chips": ["food", "food:fish_and_chips"],
        "fried_food": ["food", "food:fried_food"],
        "friture": ["food", "food:friture"],
        "gyro": ["food", "food:gyro"],
        "ice_cream": ["food", "food:ice_cream"],
        "kebab": ["food", "food:kebab"],
        "mediterranean": ["food", "food:mediterranean"],
        "noodle": ["food", "food:noodle"],
        "pancake": ["food", "food:pancake"],
        "pasta": ["food", "food:pasta"],
        "pie": ["food", "food:pie"],
        "pizza": ["food", "food:pizza"],
        "regional": ["food", "food:regional"],
        "sandwich": ["food", "food:sandwich"],
        "sausage": ["food", "food:sausage"],
        "savory_pancakes": ["food", "food:savory_pancakes"],
        "seafood": ["food", "food:seafood"],
        "steak_house": ["food", "food:steak"],
        "sub": ["food", "food:sub"],
        "sushi": ["food", "food:sushi"],
        "tapas": ["food", "food:tapas"],
        "vegan": ["food", "food:vegan"],
        "vegetarian": ["food", "food:vegetarian"],
        "wings": ["food", "food:wings"],
        # regional/cultural focus
        "african": ["food", "food:cuisine:african"],
        "american": ["food", "food:cuisine:american"],
        "arab": ["food", "food:cuisine:arab"],
        "argentinian": ["food", "food:cuisine:argentinian"],
        "asian": ["food", "food:cuisine:asian"],
        "australian": ["food", "food:cuisine:australian"],
        "baiana": ["food", "food:cuisine:baiana"],
        "balkan": ["food", "food:cuisine:balkan"],
        "basque": ["food", "food:cuisine:basque"],
        "bavarian": ["food", "food:cuisine:bavarian"],
        "belarusian": ["food", "food:cuisine:belarusian"],
        "brazilian": ["food", "food:cuisine:brazilian"],
        "cantonese": ["food", "food:cuisine:cantonese"],
        "capixaba": ["food", "food:cuisine:capixaba"],
        "caribbean": ["food", "food:cuisine:caribbean"],
        "chinese": ["food", "food:cuisine:chinese"],
        "croatian": ["food", "food:cuisine:croatian"],
        "czech": ["food", "food:cuisine:czech"],
        "danish": ["food", "food:cuisine:danish"],
        "french": ["food", "food:cuisine:french"],
        "gaucho": ["food", "food:cuisine:gaucho"],
        "german": ["food", "food:cuisine:german"],
        "greek": ["food", "food:cuisine:greek"],
        "hunan": ["food", "food:cuisine:hunan"],
        "hungarian": ["food", "food:cuisine:hungarian"],
        "indian": ["food", "food:cuisine:indian"],
        "international": ["food", "food:cuisine:international"],
        "iranian": ["food", "food:cuisine:iranian"],
        "italian": ["food", "food:cuisine:italian"],
        "japanese": ["food", "food:cuisine:japanese"],
        "korean": ["food", "food:cuisine:korean"],
        "kyo_ryouri": ["food", "food:cuisine:kyo_ryouri"],
        "latin_american": ["food", "food:cuisine:latin_american"],
        "lebanese": ["food", "food:cuisine:lebanese"],
        "malagasy": ["food", "food:cuisine:malagasy"],
        "mexican": ["food", "food:cuisine:mexican"],
        "mineira": ["food", "food:cuisine:mineira"],
        "okinawa_ryori": ["food", "food:cuisine:okinawa_ryori"],
        "pakistani": ["food", "food:cuisine:pakistani"],
        "peruvian": ["food", "food:cuisine:peruvian"],
        "polish": ["food", "food:cuisine:polish"],
        "portuguese": ["food", "food:cuisine:portuguese"],
        "rhenish": ["food", "food:cuisine:rhenish"],
        "russian": ["food", "food:cuisine:russian"],
        "shandong": ["food", "food:cuisine:shandong"],
        "sichuan": ["food", "food:cuisine:sichuan"],
        "spanish": ["food", "food:cuisine:spanish"],
        "thai": ["food", "food:cuisine:thai"],
        "turkish": ["food", "food:cuisine:turkish"],
        "vietnamese": ["food", "food:cuisine:vietnamese"],
        "westphalian": ["food", "food:cuisine:westphalian"],
    },
    "craft": {"*": ["professional"], "brewery": ["food", "nightlife"]},
    "emergency": {
        "ambulance_station": ["health"],
        "emergency_ward_entrance": ["health"],
    },
    "highway": {"bus_stop": ["transport", "transport:public"], "pedestrian": ["transport:pedestrian", "recreation"]},
    "historic": {
        "archaeological_site": ["education", "recreation"],
        "monument": ["recreation"],
        "memorial": ["recreation"],
        "castle": ["recreation"],
        "manor": ["recreation"],
    },
    "leisure": {
        "adult_gaming_centre": ["entertainment"],
        "amusement_arcade": ["entertainment"],
        "beach_resort": ["entertainment", "recreation"],
        "bandstand": ["entertainment"],
        "dance": ["nightlife"],
        "dog_park": ["recreation"],
        "fishing": ["recreation"],
        "garden": ["recreation"],
        "golf_course": ["recreation", "entertainment"],
        "ice_rink": ["entertainment"],
        "miniature_golf": ["entertainment"],
        "nature_reserve": ["recreation"],
        "park": ["recreation"],
        "pitch": ["recreation", "entertainment"],
        "playground": ["recreation"],
        "sports_centre": ["recreation", "entertainment"],
        "stadium": ["entertainment"],
        "summer_camp": ["recreation", "education"],
        "swimming_pool": ["recreation"],
        "track": ["recreation"],
        "water_park": ["entertainment"],
        "hackerspace": ["professional"],
        "fitness_station": ["professional"],
        "fitness_centre": ["professional"],
        "escape_room": ["entertainment"],
        "tanning_salon": ["professional"],
        "hotel": ["accommodation"],
        "sauna": ["professional"],
    },
    "military": {"*": ["government:military", "government"]},
    "natural": {
        "wood": ["natural"],
        "water": ["natural", "natural:water"],
        "glacier": ["natural"],
        "beach": ["natural", "recreation"],
        # added by Edu
        "tree": ["tree"],
    },
    "office": {
        "*": ["professional"],
        "government": ["government"],
        "physician": ["health"],
        "educational_institution": ["professional", "education"],
        "research": ["professional"],
    },
    "public_transport": {
        "*": ["transport", "transport:public"],
        "station": ["transport", "transport:station"],
    },
    "railway": {
        "light_rail": ["transport", "transport:rail"],
        "subway": ["transport", "transport:rail"],
        "tram": ["transport", "transport:rail"],
        "station": ["transport", "transport:rail", "transport:station"],
        "subway_entrance": [
            "transport",
            "transport:rail",
            "transport:station",
            "transport:public",
        ],
        "tram_stop": ["transport", "transport:rail", "transport:public"],
    },
    "shop": {
        "*": ["professional"],
        "bakery": ["convenience"],
        "butcher": ["convenience"],
        "cheese": ["convenience"],
        "chocolate": ["convenience"],
        "coffee": ["food"],
        "deli": ["convenience"],
        "greengrocer": ["convenience"],
        "seafood": ["food"],
        "supermarket": ["convenience"],
        "tailor": ["professional"],
        "copyshop": ["professional"],
        "dry_cleaning": ["professional"],
        "chemist": ["professional"],
        "medical_supply": ["health", "store"],
        "optician": ["health"],
        "convenience": ["convenience"],
        "hairdresser": ["professional"],
        "clothes": ["store"],
        "alcohol": ["convenience"],
        "beverages": ["convenience"],
        "car": ["retail"],
        "kiosk": ["convenience"],
        "department_store": ["retail"],
        "bicycle": ["professional"],
        "car_repair": ["professional"],
        "doityourself": ["professional", "entertainment"],
        "laundry": ["professional"],
        "books": ["store", "entertainment"],
        "wine": ["food"],
        "tobacco": ["convenience"],
        "variety_store": ["retail", "store"],
        "boutique": ["retail"],
        "training_centre": ["professional", "recreation"],
        "food": ["food"],
        "frozen_food": ["convenience"],
        "mall": ["retail"],
        "motorcycle_repair": ["transport", "transport:moto"],
        "car_parts": ["transport", "transport:car"],
        "dentist": ["health"],
        "pasta": ["food"],
        "nuts": ["food"],
        "ice_cream": ["food"],
        "shopping_centre": ["retail"],
        "health_food": ["food"],
        "shoes": ["store"],
        "craft": ["store"],
        "houseware": ["store"],
        "phone": ["store"],
        "mobile_phone": ["store"],
        "art": ["store"],
        "outdoor": ["store"],
        "erotic": ["store"],
        "electronics": ["store"],
        "confectionery": ["food"],
        "florist": ["store"],
        "pet": ["store"],
        "music": ["store"],
        "sports": ["store"],
        "jewelry": ["store"]
    
    },
    "sport": {
        "*": ["recreation"],
        "american_football": ["entertainment"],
        "australian_football": ["entertainment"],
        "badminton": ["entertainment"],
        "baseball": ["entertainment"],
        "basketball": ["entertainment"],
        "beachvolleyball": ["entertainment"],
        "billiards": ["entertainment"],
        "canadian_football": ["entertainment"],
        "chess": ["entertainment"],
        "cricket": ["entertainment"],
        "dog_racing": ["entertainment"],
        "field_hockey": ["entertainment"],
        "gaelic_games": ["entertainment"],
        "horse_racing": ["entertainment"],
        "ice_hockey": ["entertainment"],
        "karting": ["entertainment"],
        "rc_car": ["entertainment"],
        "rugby_league": ["entertainment"],
        "rugby_union": ["entertainment"],
        "swimming": ["recreation"],
        "soccer": ["recreation", "entertainment"],
        "safety_training": ["education"],
        "board_games": ["entertainment"],
        "games": ["entertainment"],
    },
    "tourism": {
        "hotel": ["accommodation"],
        "hostel": ["accommodation"],
        "motel": ["accommodation"],
        "alpine_hut": ["accommodation"],
        "apartment": ["accommodation"],
        "guest_house": ["accommodation"],
        "chalet": ["accommodation"],
        "caravan_site": ["accommodation"],
        "camp_site": ["accommodation"],
        "wilderness_hut": ["accommodation"],
        "information": ["public_facility"],
        "attraction": ["entertainment"],
        "theme_park": ["entertainment"],
        "viewpoint": ["recreation"],
        "museum": ["entertainment"],
        "gallery": ["entertainment"],
        "zoo": ["entertainment"],
        "picnic_site": ["recreation"],
        "artwork": ["recreation"],
        "winery": ["food"],
    },
    "historic": {"ruins": ["recreation"], "monastery": ["religion"]},
}


def map_taxonomy(row, reference_set):
    results = []

    values = row.dropna()

    for key in osm_to_tax.keys():
        if key in values:
            value = values[key]
            # print('found', key, values[key])

            if value in osm_to_tax[key]:
                # print('exact match', key, value, osm_to_tax[key][value])
                results.extend(osm_to_tax[key][value])
            elif "*" in osm_to_tax[key]:
                if not (key, value) in reference_set:
                    print("general match", key, value)
                    reference_set.add((key, value))
                results.extend(osm_to_tax[key]["*"])
            else:
                if not (key, value) in reference_set:
                    print("no match", key, value, row["name"])
                    reference_set.add((key, value))
                continue

            break

    if results:
        return results
    else:
        return None


def categorize_pois(poi_df, explode_taxonomies=True):
    amenities = poi_df.pipe(explode_tags)
    seen_amenities = set()
    amenities["taxonomy"] = amenities.apply(
        lambda x: map_taxonomy(x, seen_amenities), axis=1
    )

    if explode_taxonomies:
        return amenities[pd.notnull(amenities["taxonomy"])][
            ["taxonomy", "name", "geometry"]
        ].explode("taxonomy")
    else:
        return amenities